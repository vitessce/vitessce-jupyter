[build-system]
requires = ["setuptools>=67.0", "wheel>=0.38.4"]
build-backend = "setuptools.build_meta"

[project]
name = "vitessce"
version = "3.2.6"
authors = [
  { name="Mark Keller", email="mark_keller@hms.harvard.edu" },
]
description = "Jupyter widget facilitating interactive visualization of spatial single-cell data with Vitessce"
readme = "README.md"
license = {file = "LICENSE"}
requires-python = ">=3.7"
keywords = ["ipython", "jupyter", "widgets"]
classifiers = [
  'Development Status :: 4 - Beta',
  'Framework :: IPython',
  'Intended Audience :: Developers',
  'Intended Audience :: Science/Research',
  'Topic :: Multimedia :: Graphics',
  'Programming Language :: Python :: 3.7',
  'Programming Language :: Python :: 3.8',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
]
dependencies = [
  'zarr>=2.5.0',
  'numcodecs>=0.5.7',
  'scipy>=1.2.1',
  'negspy>=0.2.24',
  'pandas>=1.1.2',
  'black>=21.11b1',
  'numpy>=1.21.2',
  'anndata>=0.7.8,<0.11',
  'scanpy>=1.9.3',
  'ome-zarr==0.8.3',
  'tifffile>=2020.10.1',
  'jsonschema>=3.2',
  'tqdm>=4.1.0'
]

[project.optional-dependencies]
dev = [
  'build==0.1.0',
  'pytest>=6.2.4',
  'loompy>=3.0.6',
  'coverage>=6.3.2',
]
docs = [
  'sphinx==4.2.0',
  'sphinx-rtd-theme==1.0.0',

  # Pin sub-dependencies of sphinx
  # Reference: https://github.com/sphinx-doc/sphinx/issues/11130
  'sphinxcontrib-applehelp==1.0.4',
  'sphinxcontrib-devhelp==1.0.2',
  'sphinxcontrib-htmlhelp==2.0.1',
  'sphinxcontrib-jsmath==1.0.1',
  'sphinxcontrib-qthelp==1.0.3',
  'sphinxcontrib-serializinghtml==1.1.5',

  'nbsphinx==0.8.8',
  'nbclean==0.3.2',
  # Pin sqlalchemy to before 1.4 to fix issue importing nbclean.NotebookCleaner
  # Reference: https://docs.sqlalchemy.org/en/14/core/sqlelement.html#sqlalchemy.sql.expression.case.params.*whens
  'sqlalchemy==1.3.24',
  # nbconvert and jinja2 versions need to be pinned.
  # Reference: https://github.com/vitessce/vitessce-python/issues/152
  'nbconvert==5.6.1',
  'jinja2==3.0.3',
]
all = [
  'jupyter-server-proxy>=1.5.2',
  'anywidget>=0.9.10',
  'uvicorn>=0.17.0',
  'ujson>=4.0.1',
  'starlette==0.14.0',
  'generate-tiff-offsets>=0.1.7',

  # aiofiles is not explicitly referenced in our code,
  # but it is an implicit dependency of starlette==0.14.0.
  # https://github.com/encode/starlette/issues/49
  # Upgrading starlette will remove this dependency.
  'aiofiles>=0.6.0'
]
building = []
testing = []
linting = []
notebook = []

[project.urls]
repository = "https://github.com/vitessce/vitessce-python"

[tool.setuptools]
packages = ["vitessce", "vitessce.data_utils"]

[tool.ruff]
line-length = 120
src = ["src"]
exclude = ["docs", "tests", "demos", "binder", "README.md"]
force-exclude = true
extend-include = ["*.ipynb"]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "F",  # Errors detected by Pyflakes
    "E",  # Error detected by Pycodestyle
    "W",  # Warning detected by Pycodestyle
    "I",  # isort
    "D",  # pydocstyle
    "B",  # flake8-bugbear
    "TID",  # flake8-tidy-imports
    "C4",  # flake8-comprehensions
    "BLE",  # flake8-blind-except
    "UP",  # pyupgrade
    "RUF100",  # Report unused noqa directives
]
ignore = [
    # line too long -> we accept long comment lines; formatter gets rid of long code lines
    "E501",
    # Do not assign a lambda expression, use a def -> lambda expression assignments are convenient
    "E731",
    # allow I, O, l as variable names -> I is the identity matrix
    "E741",
    # Missing docstring in public package
    "D104",
    # Missing docstring in public module
    "D100",
    # Missing docstring in __init__
    "D107",
    # Errors from function calls in argument defaults. These are fine when the result is immutable.
    "B008",
    # __magic__ methods are are often self-explanatory, allow missing docstrings
    "D105",
    # first line should end with a period [Bug: doesn't work with single-line docstrings]
    "D400",
    # First line should be in imperative mood; try rephrasing
    "D401",
    ## Disable one in each pair of mutually incompatible rules
    # We donâ€™t want a blank line before a class docstring
    "D203",
    # We want docstrings to start immediately after the opening triple quote
    "D213",
]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"docs/*" = ["I"]
"vitessce/*" = ["D"]
"tests/*" = ["D"]
"*/__init__.py" = ["F401"]
